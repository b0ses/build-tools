- name: Create droplet
  hosts: digitalocean
  roles:
    - setup_droplet

- name: Update droplet
  hosts: custom-stream-overlay
  remote_user: root
  become: yes

  roles:
    - update_apt

- name: Configure droplet for Custom Stream Overlay - LIVE
  hosts: custom-stream-overlay
  remote_user: root
  become: yes

  vars:
    app_name: 'custom-stream-overlay'
    nginx_http_port: 80
    line_changes:
      - path: 'src/js/Settings.js'
        regexp: "^\\s*API_HOST: 'http://127.0.0.1',"
        line: "  API_HOST: 'https://{{ domain_name }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*API_PORT: '5000',"
        line: "  API_PORT: '5000',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*NAMESPACE: 'live',"
        line: "  NAMESPACE: 'live',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*CUTOFF: .*"
        line: "  CUTOFF: {{ cutoff }}"
    nginx_server_name: 'custom-stream-overlay'


  roles:
    - role: reset_nginx
      when: build_overlay|bool
    - role: install_react_app_deps
      when: build_overlay|bool
    - role: setup_react_app
      when: build_overlay|bool
    - role: patch_config_Debian_Ubuntu
      when: build_overlay|bool
    - role: configure_nginx
      when: build_overlay|bool
    - role: start_nginx
      when: build_overlay|bool
    - role: setup-ssl
      when: build_overlay|bool


- name: Configure droplet for Custom Stream Overlay - PREVIEW
  hosts: custom-stream-overlay
  remote_user: root
  become: yes

  vars:
    app_name: 'custom-stream-overlay-preview'
    base_dir: '/git/custom-stream-overlay-preview'
    nginx_http_port: 81
    line_changes:
      - path: 'src/js/Settings.js'
        regexp: "^\\s*API_HOST: 'http://127.0.0.1',"
        line: "  API_HOST: 'https://{{ domain_name }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*API_PORT: '5000',"
        line: "  API_PORT: '5000',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*NAMESPACE: 'live',"
        line: "  NAMESPACE: 'preview',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*CUTOFF: .*"
        line: "  CUTOFF: {{ cutoff }}"
    nginx_server_name: 'custom-stream-overlay-preview'


  roles:
    - role: setup_react_app
      when: build_overlay|bool
    - role: configure_nginx
      when: build_overlay|bool
    - role: start_nginx
      when: build_overlay|bool
    - role: setup-ssl
      when: build_overlay|bool


- name: Configure droplet for Custom Stream API
  hosts: custom-stream-overlay
  remote_user: root
  become: yes

  vars:
    app_name: 'custom-stream-api'
    app_package: "custom_stream_api.server"
    app_callable: "app"
    nginx_http_port: 5000
    nginx_http_location: null
    nginx_server_name: 'custom-stream-api'
    uwsgi_sockets: true
    uwsgi_threads: 1
    line_changes:
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*HOST = '127.0.0.1'"
        line: "HOST = '{{ domain_name }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*PORT = 5000"
        line: "PORT = 5000"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*DASHBOARD_PORT = 8080"
        line: "DASHBOARD_PORT = 8080"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*OVERLAY_PORT = None"
        line: "OVERLAY_PORT = None"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*PREVIEW_PORT = 81"
        line: "PREVIEW_PORT = 81"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*SECRET = ''"
        line: "SECRET = '{{ secret_key }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*WEBHOOK_SECRET = ''"
        line: "WEBHOOK_SECRET = '{{ secret_key }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*DB_URI = ''"
        line: "DB_URI = '{{ db_uri }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*USERNAME = ''"
        line: "USERNAME = '{{ chatbot_name }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*TOKEN = ''"
        line: "TOKEN = '{{ chat_token }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*CHANNEL = ''"
        line: "CHANNEL = '{{ channel }}'"

      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*LOGIN = False"
        line: "TWITCH_LOGIN = {{ login_required | capitalize }}"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*TWITCH_CLIENT_ID = ''"
        line: "TWITCH_CLIENT_ID = '{{ twitch_client_id }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*TWITCH_CLIENT_SECRET = ''"
        line: "TWITCH_CLIENT_SECRET = '{{ twitch_client_secret }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*TWITCH_REDIRECT_URI = ''"
        line: "TWITCH_REDIRECT_URI = 'https://{{ domain_name }}:8080/twitch_auth'"

      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*LIGHTS_LOCAL = True"
        line: "LIGHTS_LOCAL = False"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*HUE_APP_NAME = ''"
        line: "HUE_APP_NAME = '{{ hue_app_name }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*HUE_CLIENT_ID = ''"
        line: "HUE_CLIENT_ID = '{{ hue_client_id }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*TWITCH_CLIENT_SECRET = ''"
        line: "HUE_CLIENT_SECRET = '{{ hue_client_secret }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*HUE_REDIRECT_URI = ''"
        line: "HUE_REDIRECT_URI = 'https://{{ domain_name }}:8080/hue_auth'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*HUE_GROUP_NUMBER = 1"
        line: "HUE_GROUP_NUMBER = {{ hue_group_number }}"

  roles:
    - role: install_web_app_packages
      when: build_api|bool
    - role: setup_venv_app
      when: build_api|bool
    - role: setup_flask_db
      when: build_api|bool
    - role: patch_config_Debian_Ubuntu
      when: build_api|bool
    - role: configure_nginx
      when: build_api|bool
    - role: configure_uwsgi
      when: build_api|bool
    - role: create_service_Debian_Ubuntu
      when: build_api|bool
    - role: start_uwsgi
      when: build_api|bool
    - role: start_nginx
      when: build_api|bool
    - role: setup-ssl
      when: build_api|bool

- name: Configure droplet for Custom Stream Dashboard
  hosts: custom-stream-overlay
  remote_user: root
  become: yes

  vars:
    app_name: 'custom-stream-dashboard'
    nginx_http_port: 8080
    line_changes:
      - path: 'src/js/Settings.js'
        regexp: "^\\s*API_HOST: 'http://127.0.0.1',"
        line: "  API_HOST: 'https://{{ domain_name }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*API_PORT: '5000',"
        line: "  API_PORT: '5000',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*LIVE_PORT: '',"
        line: "  LIVE_PORT: '',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*LIVE: true,"
        line: "  LIVE: true,"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*PAGE_LIMIT: 50"
        line: "  PAGE_LIMIT: 50"

      - path: 'src/js/Settings.js'
        regexp: "^\\s*LOGIN: true,"
        line: "  LOGIN: {{ login_required }},"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*TWITCH_CLIENT_ID: '',"
        line: "  TWITCH_CLIENT_ID: '{{ twitch_client_id }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*TWITCH_REDIRECT_URI: '',"
        line: "  TWITCH_REDIRECT_URI: 'https://{{ domain_name }}:8080/twitch_auth',"

      - path: 'src/js/Settings.js'
        regexp: "^\\s*HUE_CLIENT_ID: '',"
        line: "  HUE_CLIENT_ID: '{{ hue_client_id }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*HUE_APP_ID: '',"
        line: "  HUE_APP_ID: '{{ hue_app_name }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*HUE_DEVICE_ID: '',"
        line: "  HUE_DEVICE_ID: '{{ hue_app_name }}-id',"

    nginx_server_name: 'custom-stream-dashboard'

  roles:
    - role: install_react_app_deps
      when: build_dashboard|bool
    - role: setup_react_app
      when: build_dashboard|bool
    - role: configure_nginx
      when: build_dashboard|bool
    - role: patch_config_Debian_Ubuntu
      when: build_dashboard|bool
    - role: start_nginx
      when: build_dashboard|bool
    - role: setup-ssl
      when: build_dashboard|bool
