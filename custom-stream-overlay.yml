- name: Create droplet
  hosts: digitalocean
  roles:
    - setup_droplet

- name: Configure droplet for Custom Stream Overlay
  hosts: custom-stream-overlay
  remote_user: root
  become: yes

  vars:
    app_name: 'custom-stream-overlay'
    nginx_http_port: 80
    line_changes:
      - path: 'src/js/Settings.js'
        regexp: "^\\s*API_HOST: 'http://127.0.0.1',"
        line: "API_HOST: 'https://{{ domain_name }}',"
    nginx_server_name: 'custom-stream-overlay'

  roles:
    - reset_nginx
    - install_react_app_deps
    - setup_react_app
    - patch_config_Debian_Ubuntu
    - configure_nginx
    - start_nginx
    - setup-ssl

- name: Configure droplet for Custom Stream API
  hosts: custom-stream-overlay
  remote_user: root
  become: yes

  vars:
    app_name: 'custom-stream-api'
    app_package: "custom_stream_api.server"
    app_callable: "app"
    nginx_http_port: 5000
    nginx_http_location: null
    nginx_server_name: 'custom-stream-api'
    uwsgi_sockets: true
    uwsgi_threads: 10
    line_changes:
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*HOST = '127.0.0.1'"
        line: "HOST = '{{ domain_name }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*PORT = 5000"
        line: "PORT = 5000"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*HOST = '127.0.0.1'"
        line: "HOST = '127.0.0.1'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*DASHBOARD_PORT = 8080"
        line: "DASHBOARD_PORT = 8080"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*OVERLAY_PORT = None"
        line: "OVERLAY_PORT = None"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*SECRET = ''"
        line: "SECRET = '{{ secret_key }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*WEBHOOK_SECRET = ''"
        line: "WEBHOOK_SECRET = '{{ secret_key }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*USERNAME = ''"
        line: "USERNAME = '{{ chatbot_name }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*CLIENT_ID = ''"
        line: "CLIENT_ID = '{{ chatbot_client_id }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*TOKEN = ''"
        line: "TOKEN = '{{ chat_token }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*CHANNEL = ''"
        line: "CHANNEL = '{{ channel }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*LOGIN = False"
        line: "LOGIN = {{ login_required | capitalize }}"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*CLIENT_SECRET = ''"
        line: "CLIENT_SECRET = '{{ client_secret }}'"
      - path: 'custom_stream_api/settings.py'
        regexp: "^\\s*REDIRECT_URI = ''"
        line: "REDIRECT_URI = 'https://{{ domain_name }}:8080/auth'"

  roles:
    - install_web_app_packages
    - setup_venv_app
    - setup_flask_db
    - patch_config_Debian_Ubuntu
    - configure_nginx
    - configure_uwsgi
    - create_service_Debian_Ubuntu
    - start_uwsgi
    - start_nginx
    - setup-ssl

- name: Configure droplet for Custom Stream Dashboard
  hosts: custom-stream-overlay
  remote_user: root
  become: yes

  vars:
    app_name: 'custom-stream-dashboard'
    nginx_http_port: 8080
    line_changes:
      - path: 'src/js/Settings.js'
        regexp: "^\\s*API_HOST: 'http://127.0.0.1',"
        line: "API_HOST: 'https://{{ domain_name }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*CLIENT_ID: '',"
        line: "CLIENT_ID: '{{ client_id }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*CLIENT_SECRET: '',"
        line: "CLIENT_SECRET: '{{ client_secret }}',"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*REDIRECT_URI: ''"
        line: "REDIRECT_URI: 'https://{{ domain_name }}:8080/auth'"
      - path: 'src/js/Settings.js'
        regexp: "^\\s*LOGIN: false,"
        line: "LOGIN: {{ login_required }},"
    nginx_server_name: 'custom-stream-dashboard'

  roles:
    - install_react_app_deps
    - setup_react_app
    - configure_nginx
    - patch_config_Debian_Ubuntu
    - start_nginx
    - setup-ssl
