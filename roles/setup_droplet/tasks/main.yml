---
- name: ensure ssh key exists
  user: >
    name={{ ansible_user_id }}
    generate_ssh_key=yes
    ssh_key_file=.ssh/id_rsa

- name: Set authorized key took from file
  authorized_key:
    user: "{{ ansible_user_id }}"
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    exclusive: True

- name: Ensure key exists at DigitalOcean
  digital_ocean: >
    state=present
    command=ssh
    name=jenkins-key
    ssh_pub_key={{ lookup('file', '~/.ssh/id_rsa.pub') }}
    api_token={{ do_token }}
  register: jenkins_key

- name: Ensure droplet exists
  digital_ocean: >
    state=present
    command=droplet
    name={{ app_name }}
    unique_name=yes
    size_id=1gb
    region_id=nyc1
    image_id=ubuntu-16-04-x64
    ssh_key_ids={{ jenkins_key.ssh_key.id }}
    api_token={{ do_token }}
  register: current_droplet

- debug: msg="IP is {{ current_droplet.droplet.ip_address }}"

- name: Adding domain for droplet
  digital_ocean_domain:
    state: present
    name: "{{ domain_name }}"
    ip: "{{ current_droplet.droplet.ip_address }}"

- name: Add new droplet to host group
  local_action: add_host hostname={{ current_droplet.droplet.ip_address }} groupname={{ app_name }}

- name: Wait for SSH to come up
  local_action: wait_for host={{ current_droplet.droplet.ip_address }} port=22 timeout=320 state=started

- name: Wait for domain to come up
  local_action: wait_for host={{ domain_name }} port=22 timeout=320 state=started
